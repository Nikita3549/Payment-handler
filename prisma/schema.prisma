generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Content {
  guid String @id @default(uuid())
  key  String
  data Json

  @@map("content")
}

model User {
  guid           String  @id @default(uuid())
  email          String  @unique
  hashedPassword String  @map("hashed_password")
  name           String?
  birthday       BigInt?
  gender         Gender?
  balance        Int     @default(0)

  orders   Order[]
  balances Balance[]

  @@map("users")
}

model Tariff {
  guid        String  @id @default(uuid())
  active      Boolean @default(false)
  archive     Boolean @default(false)
  amount      Int
  cost        Int
  title       String
  description String

  balances Balance[]

  @@map("tariffs")
}

model Service {
  guid        String  @id @default(uuid())
  active      Boolean @default(false)
  archive     Boolean @default(false)
  cost        Int
  title       String
  description String

  orders   Order[]
  balances Balance[]

  @@map("services")
}

model OrderStatus {
  guid String @id @default(uuid())
  name String

  orders Order[]

  @@map("orders_status")
}

model Order {
  guid        String @id @default(uuid())
  userGuid    String @map("user_guid")
  serviceGuid String @map("service_guid")
  dateCreate  BigInt
  dateUpdate  BigInt
  cost        Int
  title       String
  text        String
  statusGuid  String @map("status_guid")

  user_guids    User        @relation(fields: [userGuid], references: [guid])
  service_guids Service     @relation(fields: [serviceGuid], references: [guid])
  status_guids  OrderStatus @relation(fields: [statusGuid], references: [guid])

  @@map("orders")
}

model balanceStatus {
  guid String @id @default(uuid())
  name String

  balances Balance[]

  @@map("balance_status")
}

model Balance {
  guid          String @id @default(uuid())
  userGuid      String @map("user_guid")
  dateCreate    BigInt @map("date_create")
  dateUpdate    BigInt @map("date_update")
  cost          Int
  tariffGuid    String @map("tariff_guid")
  serviceGuid   String @map("service_guid")
  transactionId String @map("transaction_id")
  statusGuid    String @map("status_guid")

  user_guids       User           @relation(fields: [userGuid], references: [guid])
  tariff_guids     Tariff         @relation(fields: [tariffGuid], references: [guid])
  services_guids   Service        @relation(fields: [serviceGuid], references: [guid])
  balance_statuses balanceStatus? @relation(fields: [statusGuid], references: [guid])

  @@map("balance")
}

enum Gender {
  male
  female

  @@map("gender")
}
